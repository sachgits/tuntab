{"version":3,"sources":["userModelJunk.js"],"names":[],"mappings":";;;;;;;;;;;;IAOM,SAAS;AAGX,aAHE,SAAS,GAGE;8BAHX,SAAS;;AAIP,YAAI,GAAG,sBAAU,CAAC;KACrB;;iBALC,SAAS;;8BAML,QAAQ,EAAC,QAAQ,EAAC;;AAEpB,gBAAI,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,CAAC,CAAC;SACpD;;;+BACM,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,UAAU,EAAC,SAAS,EAAC,QAAQ,EAAC;AACpE,6BAAK,MAAM,CAAC,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,KAAK,EAAC,GAAG,EAAC,GAAG,EAAC,MAAM,EAAC,MAAM,EAAC,UAAU,EAAC,UAAU;AACpG,oBAAI,EAAC,EAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,QAAQ,EAAC,EAAC,EAAC,UAAS,GAAG,EAAC;AAC3D,uBAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aAC5B,CAAC,CAAC;SACN;;;+BACM,EAAE,EAAC,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,UAAU,EAAC,SAAS,EAAC,QAAQ,EAAC;AACvE,6BAAK,KAAK,CAAC,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,KAAK,EAAC,GAAG,EAAC,GAAG,EAAC,MAAM,EAAC,MAAM,EAAC,UAAU,EAAC,UAAU;AACnG,oBAAI,EAAC,EAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,QAAQ,EAAC,EAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACzE;;;mCACU,MAAM,EAAE,IAAI,EAAC,KAAK,EAAC,OAAO,EAAC,KAAK,EAAC,KAAK,EAAC,EAEjD;;;mCACU,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,OAAO,EAAC,KAAK,EAAC,KAAK,EAAC,EAEhD;;;4CAEmB,GAAG,EAAC,GAAG,EAAC,EAE3B;;;yCAEgB,GAAG,EAAC,GAAG,EAAC,EAExB;;;0CACgB,EAEhB;;;4CACmB,GAAG,EAAC,GAAG,EAAC;;;SAG3B;;;0CACiB,OAAO,EAAC,EAEzB;;;uCACc,OAAO,EAAC,EAEtB;;;yCAEe,EAEf;;;4CACkB,EAElB;;;uCACa,EAEb;;;;;;;sCAIY,EAEZ;;;2CAEiB,EAEjB;;;sCACY,EAEZ;;;6CACoB,GAAG,EAAC,GAAG,EAAC,EAE5B;;;WAxEC,SAAS","file":"userModelJunk-compiled.js","sourcesContent":["/**\r\n * Created by sachg on 2/22/2016.\r\n */\r\nimport {mongoose} from './dbConfig';\r\nimport {User} from './userSchema';\r\n\r\n\r\nclass userModel {\r\n\r\n    User;\r\n    constructor(){\r\n        user = new User();\r\n    }\r\n    login(username,password){\r\n        //TODO: password must be hashed\r\n        user.find({username:username,password:password});\r\n    }\r\n    create(username,password,email,age,gender,photoAlbum,firstname,lastname){\r\n        User.create({username:username,password:password,email:email,age:age,gender:gender,photoAlbum:photoAlbum,\r\n            name:{firstname:firstname,lastname:lastname}},function(err){\r\n            console.log(err.message);\r\n        });\r\n    }\r\n    update(id,username,password,email,age,gender,photoAlbum,firstname,lastname){\r\n        User.upate({username:username,password:password,email:email,age:age,gender:gender,photoAlbum:photoAlbum,\r\n            name:{firstname:firstname,lastname:lastname}}).where('id').eq(id);\r\n    }\r\n    addAddress(street, city,state,country,email,phone){\r\n\r\n    }\r\n    updateAddr(street,city,state,country,email,phone){\r\n\r\n    }\r\n\r\n    getMyAddressInRange(min,max){\r\n\r\n    }\r\n\r\n    findUsersInRange(min,max){\r\n\r\n    }\r\n    getAllMyFriends(){\r\n\r\n    }\r\n    getMyFriendsInRange(min,max){\r\n        //will be used in pagination and  slicing\r\n\r\n    }\r\n    addNewFoundFriend(user_id){\r\n\r\n    }\r\n    isUserMyFriend(user_id){\r\n\r\n    }\r\n\r\n    getUserProfile(){\r\n\r\n    }\r\n    updateUserProfile(){\r\n\r\n    }\r\n    getUserPhoto(){\r\n\r\n    }\r\n    /*\r\n     *small user profile user name, photo,and some feed additional info\r\n     */\r\n    getUserInfo(){\r\n\r\n    }\r\n\r\n    getAllMyProducts(){\r\n\r\n    }\r\n    isMyProduct(){\r\n\r\n    }\r\n    getMyProductsInRange(min,max){\r\n\r\n    }\r\n\r\n}"]}